from aiogram import F, Router, types
from aiogram.enums import ParseMode

from .enums import MainKeyboardButton, ResourcePath, Caption
from .keyboards import get_inline_cloud_keybord
from ...business_logic.dependencies import get_weather_service


router = Router(name='Replies Router')


@router.message(F.text == MainKeyboardButton.CONNECT_WIFI)
async def send_wifi_data(message: types.Message):
    await message.delete()
    
    photo_file = types.FSInputFile(ResourcePath.WIFI_QR_CODE)
    # Send the photo
    await message.answer_photo(
        photo=photo_file,
        caption=Caption.CONNECT_WIFI,
        parse_mode=ParseMode.HTML
    )


@router.message(F.text == MainKeyboardButton.ENTER_CLOUD)
async def send_cloud_link(message: types.Message):
    # await msg.answer(
    #     text='–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –æ–±–ª–∞–∫–æ',
    #     reply_markup=get_inline_cloud_keybord()
    # )
    await message.delete()
    await message.answer("–ù–∞–∂–º–∏—Ç–µ –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ –æ–±–ª–∞–∫–æ:", reply_markup=get_inline_cloud_keybord())


@router.message(F.text == MainKeyboardButton.GET_WEATHER)
async def send_weather_info(message: types.Message):
    weather_service = get_weather_service()
    weather = await weather_service.get_current()

    text = f"–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –¥–Ω–µ–º: \n\
             \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°Ô∏è {weather.temp_c}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è, –∫–∞–∫ {weather.feelslike_c}¬∞C. \
             \n\n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí® {weather.wind_kph} –∫–º/—á." if weather.is_day else f"–¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞ –Ω–æ—á—å—é: \
             \n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ üå°Ô∏è {weather.temp_c}¬∞C, –æ—â—É—â–∞–µ—Ç—Å—è, –∫–∞–∫ {weather.feelslike_c}¬∞C. \
             \n–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ üí® {weather.wind_kph} –∫–º/—á."

    await message.answer(text)